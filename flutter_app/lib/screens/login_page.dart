import 'package:flutter/material.dart';import 'package:provider/provider.dart';import '../services/auth_service.dart';import '../models/user.dart';class LoginPage extends StatefulWidget {  const LoginPage({super.key});  @override  State<LoginPage> createState() => _LoginPageState();}class _LoginPageState extends State<LoginPage> {  final _emailCtrl = TextEditingController();  final _passCtrl  = TextEditingController();  bool _loading = false;  String? _error;  @override  void dispose() {    _emailCtrl.dispose();    _passCtrl.dispose();    super.dispose();  }  Future<void> _submit() async {    setState(() { _loading = true; _error = null; });    try {      final auth = context.read<AuthService>();      // ✅ login -> (user, token)      final (AppUser user, String token) = await auth.login(        email: _emailCtrl.text.trim(),        password: _passCtrl.text,      );      if (!mounted) return;      // ✅ Điều hướng: student -> màn face (recognize), teacher -> sau này về trang GV      if (user.role == 'student') {        // TODO: nếu bạn muốn ép đăng ký lần đầu: Navigator.pushNamed(context, '/face/enroll', arguments: user.id);        Navigator.pushNamed(context, '/face/enroll', arguments: user.id);      } else if (user.role == 'teacher') {        // TODO: thay bằng route màn chủ GV khi có        ScaffoldMessenger.of(context).showSnackBar(          const SnackBar(content: Text('Đăng nhập giảng viên thành công!')),        );      } else {        ScaffoldMessenger.of(context).showSnackBar(          SnackBar(content: Text('Đăng nhập thành công (role: ${user.role})')),        );      }    } catch (e) {      setState(() => _error = 'Sai email/mật khẩu hoặc server lỗi.\n$e');    } finally {      if (mounted) setState(() => _loading = false);    }  }  @override  Widget build(BuildContext ctx) {    return Scaffold(      backgroundColor: const Color(0xFF9A8CF6), // tím theo UI cũ của bạn      body: SafeArea(        child: Center(          child: SingleChildScrollView(            child: ConstrainedBox(              constraints: const BoxConstraints(maxWidth: 420),              child: Padding(                padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 40),                child: Column(                  mainAxisSize: MainAxisSize.min,                  children: [                    // Logo như cũ (đảm bảo có file assets/logo_TLU.png trong pubspec)                    Image.asset('assets/logo_TLU.png', width: 250),                    const SizedBox(height: 24),                    if (_error != null)                      Padding(                        padding: const EdgeInsets.only(bottom: 12),                        child: Text(_error!, textAlign: TextAlign.center,                            style: const TextStyle(color: Colors.red)),                      ),                    // Email                    TextField(                      controller: _emailCtrl,                      keyboardType: TextInputType.emailAddress,                      decoration: InputDecoration(                        hintText: 'email',                        filled: true,                        fillColor: Colors.white,                        contentPadding: const EdgeInsets.symmetric(horizontal: 20, vertical: 12),                        border: OutlineInputBorder(                          borderRadius: BorderRadius.circular(30),                          borderSide: BorderSide.none,                        ),                      ),                    ),                    const SizedBox(height: 16),                    // Password                    TextField(                      controller: _passCtrl,                      obscureText: true,                      decoration: InputDecoration(                        hintText: 'mật khẩu',                        filled: true,                        fillColor: Colors.white,                        contentPadding: const EdgeInsets.symmetric(horizontal: 20, vertical: 12),                        border: OutlineInputBorder(                          borderRadius: BorderRadius.circular(30),                          borderSide: BorderSide.none,                        ),                      ),                    ),                    const SizedBox(height: 20),                    // Button                    SizedBox(                      width: double.infinity,                      child: ElevatedButton(                        style: ElevatedButton.styleFrom(                          backgroundColor: Colors.blueAccent,                          foregroundColor: Colors.white,                          padding: const EdgeInsets.symmetric(vertical: 14),                          shape: RoundedRectangleBorder(                            borderRadius: BorderRadius.circular(30),                          ),                          elevation: 4,                        ),                        onPressed: _loading ? null : _submit,                        child: _loading                            ? const SizedBox(                          height: 20, width: 20,                          child: CircularProgressIndicator(strokeWidth: 2, color: Colors.white),                        )                            : const Text('ĐĂNG NHẬP',                            style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),                      ),                    ),                  ],                ),              ),            ),          ),        ),      ),    );  }}